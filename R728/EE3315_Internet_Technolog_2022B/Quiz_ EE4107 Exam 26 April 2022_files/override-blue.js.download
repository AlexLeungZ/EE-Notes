var BLUE_CANVAS_SETUP={connectorUrl:"https://onlinesurvey.cityu.edu.hk/BlueConnectorInstance/",canvasAPI:"https://canvas.cityu.edu.hk",domainName:"com.explorance",consumerID:"uneAb3wY2QaWRG4D4S117w==",defaultLanguage:"en-us"},BlueCanvasJS=document.createElement("script");BlueCanvasJS.setAttribute("type","text/javascript");BlueCanvasJS.setAttribute("src","https://onlinesurvey.cityu.edu.hk/BlueConnectorInstance//Scripts/Canvas/BlueCanvas.min.js");document.getElementsByTagName("head")[0].appendChild(BlueCanvasJS);

/*
 City University of Hong Kong
 Canvas Override JS
 */

const EXECUTION_MODE_DEVELOPMENT = "development";
const EXECUTION_MODE_PRODUCTION = "production";
var _execution_mode = EXECUTION_MODE_DEVELOPMENT;

// redirect away from ldap login page
if (window.location.href == "https://canvas.cityu.edu.hk/login/ldap")
{
	window.location.replace ("https://canvas.cityu.edu.hk");
}




/*
 Environment for CityU objects
 */
Object.assign(ENV,{})





// self-enroll course for Grammarly
if (window.location.href == "https://canvas.cityu.edu.hk/enroll/PB8MWK?enrolled=1")
{
	window.location.replace ("https://canvas.cityu.edu.hk/courses/23372");
}
if (window.location.href == "https://canvas.cityu.edu.hk/courses/23372")
{
	$("a").remove(".self_unenrollment_link");
}




// google analytics
(function (i, s, o, g, r, a, m)
{
	i['GoogleAnalyticsObject'] = r;
	i[r] = i[r] || function ()
		{
			(i[r].q = i[r].q || []).push (arguments)
		}, i[r].l = 1 * new Date ();
	a = s.createElement (o),
		m = s.getElementsByTagName (o)[0];
	a.async = 1;
	a.src = g;
	m.parentNode.insertBefore (a, m)
}) (window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

ga ('create', 'UA-71527761-1', 'auto');

if (ENV ['current_user_id'] != null)
{
	ga ('set', 'userId', ENV ['current_user_id']);
	ga ('set', 'dimension1', ENV ['current_user_id']);
}

ga ('send', 'pageview');




// roles flag
var _is_admin = false;

check_user_roles ();

/*
 Check user roles
 */
function check_user_roles ()
{
	var t_roles_array = ENV ["current_user_roles"];

	if (t_roles_array != null)
	{
		if (t_roles_array.indexOf ("admin") != -1)
		{
			_is_admin = true;
		}
	}
}

/*
 Console log
 */
function console_log (p_message)
{
	if (_execution_mode == EXECUTION_MODE_DEVELOPMENT)
	{
		console.log (p_message);
	}
}

/*
 On a particular page handler
 */
function h_page (p_regex, p_function)
{
	var t_pathname = location.pathname;

	console_log ("h_page " + t_pathname);

	if (t_pathname.match (p_regex))
	{
		p_function ();
	}
}

/*
 Element rendered handler
 */
function h_element_rendered (p_selector, p_function, p_attempt_number)
{
	console_log ("h_element_rendered " + p_selector + " " + p_attempt_number);

	var t_element = $ (p_selector);

	p_attempt_number = ++p_attempt_number || 1;

	// if element found, call function on element
	if (t_element.length)
	{
		return p_function (t_element);
	}

	// stop when reaching 0
	if (p_attempt_number <= 0)
	{
		return;
	}

	p_attempt_number = p_attempt_number - 1;

	setTimeout (h_element_rendered, 250, p_selector, p_function, p_attempt_number);
}

/*
 Element rendered handler (no console log)
 */
function h_element_rendered_nolog (p_selector, p_function, p_attempt_number)
{
	var t_element = $ (p_selector);

	p_attempt_number = ++p_attempt_number || 1;

	// if element found, call function on element
	if (t_element.length)
	{
		return p_function (t_element);
	}

	// stop when reaching 0
	if (p_attempt_number <= 0)
	{
		return;
	}

	p_attempt_number = p_attempt_number - 1;

	setTimeout (arguments.callee.name, 250, p_selector, p_function, p_attempt_number);
}








/* ======================================================================= */
/* =========================== All courses =============================== */
/* ======================================================================= */

/*
 Courses page mods
 */
h_page (/\/courses$/, courses_rename_browse_courses);

/* Rename "Browse more courses" in courses page */
function courses_rename_browse_courses ()
{
	console_log ("courses_rename_browse_courses");

	const COURSES_BROWSE_MORE_ELEMENT = "#content a[href='/search/all_courses/']";
	const COURSES_BROWSE_MORE_TEXT_MOD = "Self-Access Course List";

	$ (COURSES_BROWSE_MORE_ELEMENT).text (COURSES_BROWSE_MORE_TEXT_MOD);
}








/* ======================================================================= */
/* ========================= Course "Settings" =========================== */
/* ======================================================================= */

/*
 Courses settings mods
 */
h_page (/\/courses\/\d+\/settings$/, courses_settings_mod);

function courses_settings_mod ()
{
	console_log ("courses_settings_mod");

	if (_is_admin == false)
	{
		courses_settings_remove_delete_conclude ();
		courses_settings_remove_public_visibility ();
		courses_settings_remove_more_options ();
	}

	course_settings_move_commons_to_end ();
}

/* Remove "Permanently Delete" and "Conclude" course */
function courses_settings_remove_delete_conclude ()
{
	console_log ("courses_settings_remove_delete_conclude");

	const COURSES_SETTINGS_CONCLUDE_COURSE_ELEMENT = "#right-side a[href$='event=conclude']";
	const COURSES_SETTINGS_DELETE_COURSE_ELEMENT = "#right-side a[href$='event=delete']";

	$ (COURSES_SETTINGS_CONCLUDE_COURSE_ELEMENT).hide ();
	$ (COURSES_SETTINGS_DELETE_COURSE_ELEMENT).hide ();
}

/* Remove public visibility options */
function courses_settings_remove_public_visibility ()
{
	console_log ("courses_settings_remove_public_visibility");

	const COURSES_SETTINGS_VISIBILITY_SELECT = "#course_visibility #course_course_visibility";
	const COURSES_SETTINGS_VISIBILITY_CUSTOM_INPUT = "#course_visibility #course_custom_course_visibility";
	const COURSES_SETTINGS_VISIBILITY_INDEXED_INPUT = "#course_visibility #course_indexed";
	const COURSES_SETTINGS_VISIBILITY_BR = "#course_visibility br";

	$ (COURSES_SETTINGS_VISIBILITY_SELECT).parent ().hide ();
	$ (COURSES_SETTINGS_VISIBILITY_CUSTOM_INPUT).parent ().hide ();
	$ (COURSES_SETTINGS_VISIBILITY_INDEXED_INPUT).parent ().hide ();
	$ (COURSES_SETTINGS_VISIBILITY_BR).hide ();
}

/* Remove some items in more options */
function courses_settings_remove_more_options ()
{
	console_log ("courses_settings_remove_more_options");

	const COURSES_SETTINGS_SELF_ENROLLMENT = "#course_self_enrollment";
	const COURSES_SETTINGS_SELF_ENROLLMENT_LABEL = ".course_form_more_options label[for='course_self_enrollment']";

	// don't try to manipulate open_enrollment_holder as that is controlled by the previous checkbox
	// that will override this JS hidden
	const COURSES_SETTINGS_OPEN_ENROLLMENT = "#course_open_enrollment";
	const COURSES_SETTINGS_OPEN_ENROLLMENT_LABEL = ".course_form_more_options label[for='course_open_enrollment']";

	$ (COURSES_SETTINGS_SELF_ENROLLMENT).hide ();
	$ (COURSES_SETTINGS_SELF_ENROLLMENT_LABEL).hide ();
	$ (COURSES_SETTINGS_OPEN_ENROLLMENT).hide ();
	$ (COURSES_SETTINGS_OPEN_ENROLLMENT_LABEL).hide ();
}

/* Move Canvas Commons to the end of the list */
function course_settings_move_commons_to_end ()
{
	console_log ("course_settings_move_commons_to_end");

	const COURSES_SETTINGS_RIGHT_SIDE_SUMMARY_ELEMENT = "#right-side table.summary";
	const COURSES_SETTINGS_RIGHT_SIDE_CANVAS_COMMONS_ELEMENT = "#right-side a:contains('Commons')";

	$ (COURSES_SETTINGS_RIGHT_SIDE_SUMMARY_ELEMENT).before ($ (COURSES_SETTINGS_RIGHT_SIDE_CANVAS_COMMONS_ELEMENT));
}


/*
 Import Content mods
 */

h_page (/\/courses\/\d+\/content_migrations$/, content_migrations_mod);

function content_migrations_mod ()
{
	content_migrations_guide ();
}

/* add Import Content guide */
function content_migrations_guide ()
{
	console_log ("content_migrations_guide");

	const IMPORT_RECOMMENDATION_DIV = "#content";

	h_element_rendered (IMPORT_RECOMMENDATION_DIV,
	                    function (el)
	                    {
		                    $ (IMPORT_RECOMMENDATION_DIV).append (
		                    	'<div style="width: 80%; margin: auto; background-color: #f2ede0; -moz-box-shadow: 6px 6px 0px #e0d8d2; -webkit-box-shadow: 6px 6px 0px #e0d8d2; box-shadow: 6px 6px 0px #e0d8d2; padding: 15px; border: #b5a295 solid 2px; clear:both;"><h3 style="text-align: center; font-style: italic; color: #bf165e;">Notice about content import from previous course</h3><p>Starting Semester A 2021/22, all new Canvas courses have the updated settings (more details: <a href="https://www.cityu.edu.hk/elearn/elearn_ins_canvas-newcourse-defaultsettings.html" target="_blank">Default settings of new Canvas courses</a>).</p><p>"Import Course Content" may <span style="color: #bf165e;">overwrite the new settings</span>. After copying content from a previous Canvas course, please check those settings and update according to your preference in the destination Canvas course.</p></div>');
	                    }
	);
}








/* ======================================================================= */
/* ============================= Peoples ================================= */
/* ======================================================================= */

/*
 Peoples page mods
 */
h_page (/\/courses\/\d+\/users/, users_hide_add_options);

/* Hiding add people options in peoples page */
function users_hide_add_options ()
{
	console_log ("users_hide_add_options");

	// check if add people button is rendered
	h_element_rendered ('#addUsers', h_users_add_users_button_rendered, 60);
}

var _is_users_login_id_radio_rendered;

/* Add users button rendered handler */
function h_users_add_users_button_rendered ()
{
	console_log ("h_users_add_users_button_rendered");

	// add on click handler to add users button
	var t_add_users_button = document.getElementById ('addUsers');
	t_add_users_button.onclick = h_add_users_button_click;
}

/* Add users button click handler */
function h_add_users_button_click ()
{
	console_log ("h_add_users_button_click");

	// check if user login id radio rendered
	h_element_rendered ('#peoplesearch_radio_unique_id', h_users_login_id_radio_rendered, 60);
}

/* User login id radio rendered handler */
function h_users_login_id_radio_rendered ()
{
	console_log ("h_users_login_id_radio_rendered");

	const USERS_LOGIN_ID_RADIO = "#peoplesearch_radio_unique_id";

	$ (USERS_LOGIN_ID_RADIO).click ();
}








/* ======================================================================= */
/* ========================== Announcements ============================== */
/* ======================================================================= */

/*
 Create announcement mods
 */
h_page (/\/courses\/\d+\/discussion_topics\/new$/, pre_announcement_create_rename_button);

/*
 Rename create announcement button label
 */
function pre_announcement_create_rename_button ()
{
	if (location.search.search ("is_announcement=true") != -1)
	{
		announcement_create_rename_button ();
	}
}

function announcement_create_rename_button ()
{
	console_log ("announcement_create_rename_button");

	const ANNOUCEMENT_CREATE_SAVE_BUTTON = "button:contains('Save')[type='submit']";

	h_element_rendered (ANNOUCEMENT_CREATE_SAVE_BUTTON,
	                    function (el)
	                    {
		                    $ (ANNOUCEMENT_CREATE_SAVE_BUTTON).attr ("data-text-while-loading",
		                                                             "Publishing...");
		                    $ (ANNOUCEMENT_CREATE_SAVE_BUTTON).html ("Publish");
	                    }
	)
}








/* ======================================================================= */
/* =========================== Assignments =============================== */
/* ======================================================================= */

/*
 New assignment mods
 */
h_page (/\/courses\/\d+\/assignments\/new$/, assignment_new_mod);

function assignment_new_mod ()
{
	assignment_new_edit_add_turnitin_guide_link ();
	assignment_new_hide_turnitin_api ();
}

/* add turnitin guide link */
function assignment_new_edit_add_turnitin_guide_link ()
{
	console_log ("assignment_new_add_turnitin_guide_link");

	const ASSIGNMENT_NEW_ONLINE_SUBMISSION_TYPES_DIV = "#assignment_online_submission_types";

	h_element_rendered (ASSIGNMENT_NEW_ONLINE_SUBMISSION_TYPES_DIV,
	                    function (el)
	                    {
		                    $ (ASSIGNMENT_NEW_ONLINE_SUBMISSION_TYPES_DIV).append (
			                    '<div class="subtitle"><i class="icon-info"></i> <a href="https://www.cityu.edu.hk/elearn/elearn_ins_canvas-turnitin-create.html" target="_blank" style="font-weight: normal;">How to create Turnitin Assignment?</a> </div>');
	                    }
	);
}

/* Hide Turnitin API */
function assignment_new_hide_turnitin_api ()
{
	console_log ("assignment_new_hide_turnitin_api");

	const ASSIGNMENT_NEW_TURNITIN_LABEL = "#assignment_online_submission_types label[for='assignment_turnitin_enabled']";
	const ASSIGNMENT_NEW_TURNITIN_CHECKBOX = "#assignment_turnitin_enabled";
	const ASSIGNMENT_NEW_TURNITIN_ADVANCED_LINK = "#advanced_turnitin_settings_link";

	h_element_rendered (ASSIGNMENT_NEW_TURNITIN_CHECKBOX,
	                    function (el)
	                    {
		                    $ (ASSIGNMENT_NEW_TURNITIN_LABEL).hide ();
		                    $ (ASSIGNMENT_NEW_TURNITIN_CHECKBOX).hide ();
		                    $ (ASSIGNMENT_NEW_TURNITIN_ADVANCED_LINK).hide ();
	                    }
	);
}

/*
 Edit assignment mods
 */
h_page (/\/courses\/\d+\/assignments\/\d+\/edit$/, assignment_edit_mod);

function assignment_edit_mod ()
{
	assignment_new_edit_add_turnitin_guide_link ();
	assignment_edit_hide_turnitin_api ();
}

/* Hide Turnitin API */
function assignment_edit_hide_turnitin_api ()
{
	console_log ("assignment_edit_hide_turnitin_api");

	const ASSIGNMENT_EDIT_TURNITIN_LABEL = "#assignment_online_submission_types label[for='assignment_turnitin_enabled']";
	const ASSIGNMENT_EDIT_TURNITIN_CHECKBOX = "#assignment_turnitin_enabled";

	h_element_rendered (ASSIGNMENT_EDIT_TURNITIN_CHECKBOX,
	                    function (el)
	                    {
		                    // disable changes if using Turnitin API
		                    if ($ (ASSIGNMENT_EDIT_TURNITIN_CHECKBOX).is (":checked") == true)
		                    {
			                    $ (ASSIGNMENT_EDIT_TURNITIN_CHECKBOX).prop ("disabled", true)
		                    }
		                    // hide it if not using
		                    else
		                    {
			                    $ (ASSIGNMENT_EDIT_TURNITIN_LABEL).hide ();
			                    $ (ASSIGNMENT_EDIT_TURNITIN_CHECKBOX).hide ();
		                    }
	                    }
	);
}








/* ======================================================================= */
/* ============================= Quizzes ================================= */
/* ======================================================================= */


/*
 Create / Edit quiz mode
 */


h_page (/\/courses\/\d+\/quizzes\/\d+\/edit$/, quiz_edit_mod);

function quiz_edit_mod ()
{
	quiz_lockdown_browser_message ();
}


/* add LockDown Browser message */
function quiz_lockdown_browser_message ()
{
	console_log ("lockdown_browser_message_link");

	const LOCKDOWN_BROWSER_MESSAGE_DIV = "#lockdown_browser_suboptions";

	h_element_rendered (LOCKDOWN_BROWSER_MESSAGE_DIV,
	                    function (el)
	                    {
		                    $ (LOCKDOWN_BROWSER_MESSAGE_DIV).append (
		                    	'<span style="color: #bf165e;">Please contact the e-Learning Team (<a href="mailto:elearn@cityu.edu.hk?subject=Use of Respondus LockDown Browser">elearn@cityu.edu.hk</a>) if you have any inquires about the use of Respondus LockDown Browser and Respondus Monitor. <a href="https://www.cityu.edu.hk/elearn/elearn_ins_canvas-respondus-lockdown.html" target="_blank">Click Here</a> for our instructor guide.</span><br><br>');
	                    }
	);
}


/*
 LockDown Browser (launch) mods
 */

h_page (/\/courses\/\d+\/quizzes\/\d+\/lockdown_browser_required$/, lockdown_launch_mod);

function lockdown_launch_mod ()
{
	lockdown_launch_guide_link ();
}

/* add LockDown Browser guide link */
function lockdown_launch_guide_link ()
{
	console_log ("lockdown_launch_guide_link");

	const LOCKDOWN_REQUIRED_DIV = "#content";

	h_element_rendered (LOCKDOWN_REQUIRED_DIV,
	                    function (el)
	                    {
		                    $ (LOCKDOWN_REQUIRED_DIV).append (
		                    	'<br><br><div style="width: 80%; border: 1px #333333 solid; margin: auto; padding: 10px; color: #333333;"><p><b>If you are already running Respondus LockDown Browser and currently seeing this message. <br> Please click on Quizzes from the Course link menu and click on the quiz that <br> you are trying to attempt to continue with the quiz/exam.</b></p><p><br><b>If have not installed Respondus LockDown Browser, you can download it from this link:</b></p><p><a href="https://download.respondus.com/lockdown/download.php?id=997146130">https://download.respondus.com/lockdown/download.php?id=997146130</a></p><p style="color: #d54085;">(LockDown Browser is only available on Windows and Mac OS)</p><br><br><p>After installation,</p><ul><li>Windows:<br>double-click the <strong>LockDown Browser</strong> icon on the desktop, or<br>go to "Start" &gt; locate "All Programs" &gt; click <strong>Respondus</strong> &gt;  click <strong>LockDown Browser</strong><br><br></li><li>Mac OS:<br>open <strong>Applications</strong> folder &gt; click the <strong>LockDown Browser</strong> icon</li></ul></div>');
	                    }
	);
}








/* ======================================================================= */
/* ========================= Library Resources =========================== */
/* ======================================================================= */








// function for omitting any section code from the course code

function coursecode_clear(course_code_var) {
	crs = course_code_var;
	check_lastThird = crs.charAt(crs.length-3);
	if (check_lastThird.match(/[a-zA-Z]/)) {
		let code_lastThird = crs.charAt(crs.length-3);
		do {
			crs = crs.substring(0, crs.length-3);
			code_lastThird = crs.charAt(crs.length-3);
		} while (code_lastThird.match(/[a-zA-Z]/));
	}
	return crs;
}







/*
LTI Redirect Tool - Library Resources (demo 1)
*/

h_page (/\/courses\/\d+/, nav_libraryres_demo1_link_mod);

function nav_libraryres_demo1_link_mod ()
{
	libres_link_default = "https://lbapp01.lib.cityu.edu.hk/web_page/ref/libres.htm"; // default link
	libres_link_base = "https://lbapp01.lib.cityu.edu.hk/web_page/ref/libres.htm?course="; // prepare the link for course

	course_code_var = $("#breadcrumbs li:nth-child(2)").text(); // retrieve the displayed course code (2nd child li) next to the hamburger icon at the top
	libres_link_href = libres_link_default; // set the "Library Resources" link as the default link

	// term course code must have at least 10 characters
	if (course_code_var.length > 10) {

		// check if the first 6 characters of the displayed course code are numbers (term code)
		if (course_code_var.substring(0,6).match(/^[0-9]+$/) != null) {

			course_code = course_code_var.substring(6); // omit the first 6 digit characters

			// check if the course is "BB-X" / "BB-C4" / "BB-D4"
			if (course_code.includes("_")) {
				const arrayCourse = course_code.split("_");
				course_code = arrayCourse[0]; // return the first course code only
			} else {
				code_lastThird = course_code.charAt(course_code.length-3);
				// check if the course is "section"
				if (code_lastThird.match(/[a-zA-Z]/)) {
					course_code = course_code.substring(0, course_code.length-3); // omit the last 3 characters
				}
			}
			libres_link_href = libres_link_base + course_code; // include the course code in the link
		}
	}
	$("a[href*='external_tools']:contains('Library Resources (demo 1)')").attr('href', libres_link_href); // modify the "Library Resources" external tool link
	$("a[href*='lbapp01.lib.cityu.edu.hk']:contains('Library Resources (demo 1)')").attr('target', '_blank'); // set as "Open in a new Window"
}

/*
(end) LTI Redirect Tool - Library Resources (demo 1)
*/




/*
LTI Redirect Tool - Library Resources (demo 2)
*/

h_page (/\/courses\/\d+\/external_tools/, nav_libraryres_demo2_link_mod);

function nav_libraryres_demo2_link_mod ()
{
	// default link
	libres_link_default = "https://lbapp01.lib.cityu.edu.hk/web_page/ref/libres_course.php";
	// prepare the link for course
	libres_link_base = "https://lbapp01.lib.cityu.edu.hk/web_page/ref/libres_course.php?course=";

	course_code_var = $("#breadcrumbs li:nth-child(2)").text(); // retrieve the displayed course code (2nd child li) next to the hamburger icon at the top
	libres_link_href = libres_link_default; // set the "Library Resources" link as the default link

	// term course code must have at least 10 characters
	if (course_code_var.length > 10) {

		// check if the first 6 characters of the displayed course code are numbers (term code)
		if (course_code_var.substring(0,6).match(/^[0-9]+$/) != null) {

			course_code = course_code_var.substring(6); // omit the first 6 digit characters
			libres_link_href = libres_link_base;

			// check if the course is "BB-X" / "BB-C4" / "BB-D4"
			if (course_code.includes("_")) {
				const arrayCourse = course_code.split("_");
				for (i=0; i<arrayCourse.length; i++) {
					if (arrayCourse[i].length >= 6) {
						if (i>0) {
							libres_link_href = libres_link_href + "%20OR%20";
						}
						course_item = coursecode_clear(arrayCourse[i]);
						libres_link_href = libres_link_href + course_item;
					}			
				}
			} else {
				course_code = coursecode_clear(course_code);
				libres_link_href = libres_link_href + course_code; // include the course code in the link
			}
		}
	}
	//
	const LIBRARY_IFRAME = "iframe[title='Library Resources (demo 2)']";
	h_element_rendered_nolog (LIBRARY_IFRAME,
		function (el)
		{
			$("#custom_url").val(libres_link_href);
			$(LIBRARY_IFRAME).attr("src", libres_link_href);
		}
	)
}
/*
(end) LTI Redirect Tool - Library Resources (demo 2)
*/




/*
LTI Redirect Tool - Library Find (demo 2)
*/

h_page (/\/courses\/\d+\/external_tools/, nav_libraryfind_demo2_link_mod);

function nav_libraryfind_demo2_link_mod ()
{
	// default link
	//libres_link_default = "https://julac-cuh.primo.exlibrisgroup.com/discovery/search?tab=Everything&search_scope=MyInst_and_CI&sortby=date_d&vid=852JULAC_CUH:CUH_T2";
	libres_link_default = "https://lbapp01.lib.cityu.edu.hk/web_page/ref/libres_course.php";
	// prepare the link for course
	libres_link_base = "https://julac-cuh.primo.exlibrisgroup.com/discovery/search?tab=Everything&search_scope=MyInst_and_CI&sortby=date_d&vid=852JULAC_CUH:CUH_T2&query=any,contains,";

	course_code_var = $("#breadcrumbs li:nth-child(2)").text(); // retrieve the displayed course code (2nd child li) next to the hamburger icon at the top
	libres_link_href = libres_link_default; // set the "Library Resources" link as the default link

	// term course code must have at least 10 characters
	if (course_code_var.length > 10) {

		// check if the first 6 characters of the displayed course code are numbers (term code)
		if (course_code_var.substring(0,6).match(/^[0-9]+$/) != null) {

			course_code = course_code_var.substring(6); // omit the first 6 digit characters
			libres_link_href = libres_link_base;

			// check if the course is "BB-X" / "BB-C4" / "BB-D4"
			if (course_code.includes("_")) {
				const arrayCourse = course_code.split("_");
				for (i=0; i<arrayCourse.length; i++) {
					if (arrayCourse[i].length >= 6) {
						if (i>0) {
							libres_link_href = libres_link_href + "%20OR%20";
						}
						course_item = coursecode_clear(arrayCourse[i]);
						libres_link_href = libres_link_href + course_item;
					}			
				}
			} else {
				course_code = coursecode_clear(course_code);
				libres_link_href = libres_link_href + course_code; // include the course code in the link
			}
		}
	}
	//
	const LIBRARY_IFRAME = "iframe[title='Library Find (demo 2)']";
	h_element_rendered_nolog (LIBRARY_IFRAME,
		function (el)
		{
			$("#custom_url").val(libres_link_href);
			$(LIBRARY_IFRAME).attr("src", libres_link_href);
		}
	)
}

/*
(end) LTI Redirect Tool - Library Find (demo 2)
*/







/*
LTI Redirect Tool - Library Find (demo 2.01)
*/

h_page (/\/courses\/\d+\/external_tools/, nav_libraryfind_demo2_01_link_mod);

function nav_libraryfind_demo2_01_link_mod ()
{
	// default link
	//libres_link_default = "https://julac-cuh.primo.exlibrisgroup.com/discovery/search?tab=Everything&search_scope=MyInst_and_CI&sortby=date_d&vid=852JULAC_CUH:CUH_T2";
	libres_link_default = "https://lbapp01.lib.cityu.edu.hk/web_page/ref/libres_course.php";
	// prepare the link for course
	libres_link_base = "https://julac-cuh.primo.exlibrisgroup.com/discovery/search?tab=Everything&search_scope=MyInst_and_CI&sortby=date_d&vid=852JULAC_CUH:CUH_T2&query=any,contains,";

	course_code_var = $("#breadcrumbs li:nth-child(2)").text(); // retrieve the displayed course code (2nd child li) next to the hamburger icon at the top
	libres_link_href = libres_link_default; // set the "Library Resources" link as the default link

	// term course code must have at least 10 characters
	if (course_code_var.length > 10) {

		// check if the first 6 characters of the displayed course code are numbers (term code)
		if (course_code_var.substring(0,6).match(/^[0-9]+$/) != null) {

			course_code = course_code_var.substring(6); // omit the first 6 digit characters
			libres_link_href = libres_link_base;

			// check if the course is "BB-X" / "BB-C4" / "BB-D4"
			if (course_code.includes("_")) {
				const arrayCourse = course_code.split("_");
				for (i=0; i<arrayCourse.length; i++) {
					if (arrayCourse[i].length >= 6) {
						if (i>0) {
							libres_link_href = libres_link_href + "%20OR%20";
						}
						course_item = coursecode_clear(arrayCourse[i]);
						libres_link_href = libres_link_href + course_item;
						//libres_link_href = libres_link_href + arrayCourse[i];
					}
				}
			} else {
				/*
				code_lastThird = course_code.charAt(course_code.length-3);
				// check if the course is "section"
				if (code_lastThird.match(/[a-zA-Z]/)) {
					course_code = course_code.substring(0, course_code.length-3); // omit the last 3 characters
				}
				*/
				course_code = coursecode_clear(course_code);
				libres_link_href = libres_link_href + course_code; // include the course code in the link
			}
		}
	}
	//
	const LIBRARY_IFRAME = "iframe[title='Library Find (demo 2.01)']";
	h_element_rendered_nolog (LIBRARY_IFRAME,
		function (el)
		{
			$("#custom_url").val(libres_link_href);
			$(LIBRARY_IFRAME).attr("src", libres_link_href);
		}
	)
}

/*
(end) LTI Redirect Tool - Library Find (demo 2.01)
*/




/*
LTI Redirect Tool - LibraryFind
*/

h_page (/\/courses\/\d+/, nav_libraryfind_link_mod);

function nav_libraryfind_link_mod ()
{
	course_reserve_link_default = "https://julac.hosted.exlibrisgroup.com/primo-explore/search?vid=CUH&search_scope=CourseReserve"; // default "Course Reserve" link
	course_reserve_link_base = "https://julac.hosted.exlibrisgroup.com/primo-explore/search?vid=CUH&search_scope=CourseReserve&query=any,exact,"; // prepare the link for course

	course_code_var = $("#breadcrumbs li:nth-child(2)").text(); // retrieve the displayed course code (2nd child li) next to the hamburger icon at the top
	course_reserve_link_href = course_reserve_link_default; // set the "LibraryFind" link as the default link

	// term course code must have at least 10 characters
	if (course_code_var.length > 10) {

		// check if the first 6 characters of the displayed course code are numbers (term code)
		if (course_code_var.substring(0,6).match(/^[0-9]+$/) != null) {

			course_code = course_code_var.substring(6); // omit the first 6 digit characters

			// check if the course is "BB-X" / "BB-C4" / "BB-D4"
			if (course_code.includes("_")) {
				const arrayCourse = course_code.split("_");
				course_code = arrayCourse[0]; // return the first course code only
			} else {
				code_lastThird = course_code.charAt(course_code.length-3);
				// check if the course is "section"
				if (code_lastThird.match(/[a-zA-Z]/)) {
					course_code = course_code.substring(0, course_code.length-3); // omit the last 3 characters
				}
			}
			course_reserve_link_href = course_reserve_link_base + course_code; // include the course code in the link
		}
	}
	$("a[href*='external_tools']:contains('LibraryFind')").attr('href', course_reserve_link_href); // modify the "LibraryFind" external tool link
	$("a[href*='julac.hosted.exlibrisgroup.com']:contains('LibraryFind')").attr('target', '_blank'); // set as "Open in a new Window"
}

/*
(end) LTI Redirect Tool - LibraryFind
*/








/* ======================================================================= */
/* =============================== Zoom ================================== */
/* ======================================================================= */

/*
 Zoom disclaimer starts here
 */


const COOKIE_ZOOM_ACCEPTED = 'is_zoom_accepted';

// zoom a link
const JQ_ZOOM_A_LINK = "a[href*='external_tools']:contains('Zoom')";
var zoom_a_link_href;

// zoom disclaimer div
const DIV_ZOOM_DISCLAIMER = 'zoom_disclaimer';
const JQ_ZOOM_DISCLAIMER = '#' + DIV_ZOOM_DISCLAIMER;
	
// applies to all courses, for production use
h_page (/\/courses\/\d+/, zoom_disclaimer);

// set cookie
function set_cookie (p_name, p_value, p_exp_days)
{
	const ONE_DAY_IN_MS = 86400000;	

	var t_exp_date = new Date ();
	t_exp_date.setTime (t_exp_date.getTime () + (p_exp_days * ONE_DAY_IN_MS));
		
	var t_cookie = p_name + '=' + p_value + '; ';
	var t_expires = 'expires=' + t_exp_date.toUTCString () + '; ';
	var t_cookie_full = t_cookie + t_expires;

	document.cookie = t_cookie_full;
}

// get cookie
function get_cookie (p_name)
{
	var t_cookie_array = document.cookie.split ('; ');
	var t_cookie_array_length = t_cookie_array.length;

	for (var i = 0; i < t_cookie_array_length; i++)
	{
		var t_cookie_pair = t_cookie_array [i].split ('=');
			
		var t_cookie_name = t_cookie_pair [0];
		var t_cookie_value = t_cookie_pair [1];

		if (t_cookie_name === p_name)
		{
			return (t_cookie_value);
		}
	}

	return null;
}

// zoom a link clicked handler
function h_zoom_a_link_clicked (p_event)
{
	console_log (arguments.callee.name);

	p_event.preventDefault ();
	$( JQ_ZOOM_DISCLAIMER ).dialog ( "open" );
}

// zoom a link ready handler
function h_zoom_a_link_ready ()
{
	console_log (arguments.callee.name);

	zoom_a_link_href = $( JQ_ZOOM_A_LINK )[0].href;
	$( JQ_ZOOM_A_LINK ).click (h_zoom_a_link_clicked);
}

// zoom disclaimer ready handler
function h_zoom_disclaimer_ready ()
{
	console_log (arguments.callee.name);

	$( JQ_ZOOM_DISCLAIMER ).dialog
	(
		{
			autoOpen: false,
			resizable: false,
			height: "auto",
			width: 500,
			buttons:
			{
				'Agree and continue': function ()
				{
					// as requested by management, cookie logic is disabled
					// 2021-01-07: cookie logic (1 day) is enabled
					set_cookie (COOKIE_ZOOM_ACCEPTED, 'true', 1);

					window.location.href = zoom_a_link_href;

				},
				Cancel: function ()
				{
					console_log ('cancel');
					$( this ).dialog( 'close' );
				}
			}
		}
	);
}

// zoom disclaimer initialisation function
function zoom_disclaimer ()
{
	console_log (arguments.callee.name);

	// only implement if zoom link presents
	if ($( JQ_ZOOM_A_LINK ).length > 0)
	{
		// only implement if cookie is null
		if (get_cookie (COOKIE_ZOOM_ACCEPTED) == null)
		{
			// continue only if jquery ui dialog presents
			//
			// note: sometimes jquery ui dialog will failed to load
			// for example when user is loading the Announcements page
			// should revisit in the future whether such a checking is still necessary
			//
			if (jQuery.ui.dialog)
			{
				// prepare zoom disclaimer popup
				var t_zoom_div = '<div id="' + DIV_ZOOM_DISCLAIMER + '" title="Notes to users"><p>All university members, physical or online, are requested to:</p><ul><li>be civil and respectful to others;</li><li>engage in rational exchange and be law abiding;</li><li>refrain from making attacks on individuals or groups with unfounded allegations, and</li><li>behave politely with no use of abusive or inflammatory language.</li></ul><p>The intellectual property rights of all the course contents, including the downloadable (or otherwise) materials and video recordings, belong to the staff concerned. Sharing of these materials to others without the explicit and prior permission from the owner is considered illegal and strictly prohibited. To prevent illegal sharing, all video recordings are embedded with hidden watermark.</p><p>Violation of the above, including obstruction or disruption of any academic activities, is considered improper and may be deemed as misconduct as laid down in the <a href="https://www.cityu.edu.hk/vpsa/cscdp/" target="_blank">Code of Student Conduct</a>. Students are also reminded to observe the <a href="https://wikisites.cityu.edu.hk/sites/upolicies/itpolicy/" target="_blank">Policies on the Use of IT Services and Resources</a> and the <a href="https://wikisites.cityu.edu.hk/sites/upolicies/ippolicy/Documents/IPPolicy.pdf" target="_blank">University Policy on Intellectual Property</a>.</p></div>';

				// add page to body
				$( t_zoom_div ).appendTo (document.body);

				// zoom a link rendered
				$( JQ_ZOOM_A_LINK ).ready (h_zoom_a_link_ready);
		
				// zoom disclaimer rendered
				$( JQ_ZOOM_DISCLAIMER ).ready (h_zoom_disclaimer_ready);
			}
			else
			{
				// try again later
				console_log ('jquery ui dialog not available');
				setTimeout(() => { zoom_disclaimer (); }, 100);
			}
		}
	}
}

/*
 Zoom disclaimer ends
 */








/* ======================================================================= */
/* ========================== policy messages ============================ */
/* ======================================================================= */

 /*
 policy message on course invitation for Teacher / TA / Grader / Designer roles
 */


// policy message box with the red background color
//
function message_policy (var_role)
{
	if (var_role.length > 0) {
		role_enrollment = ' <strong>' + var_role + '</strong>'
	} else {
		role_enrollment = ''
	}
	return '<div style="background-color: #bf165e; color: #FFFFFF; margin-top: 10px; margin-bottom: 10px; padding: 20px; text-align: justify;">Please note that the provision to and the privilege of your course user role' + role_enrollment + '.  You are responsible for protecting data privacy when using Canvas. Please visit CityU\'s <a href="https://www.cityu.edu.hk/vpad/dataprotection.htm" target="_blank"><span style="color: #FFFFFF; font-weight: bold; text-decoration: underline;">Data Protection</span></a> and <a href="https://www.cityu.edu.hk/policies/itpolicy/policies-on-use-of-it-services-and-resources" target="_blank"><span style="color: #FFFFFF; font-weight: bold; text-decoration: underline;">Policies on Use of IT Services and Resources</span></a> webpages for more information.</div>';
}

// course invitation: append the policy message box for the role variable
//
function course_invitation_add_policy (policy_role)
{
	const INVITATION_ROLE_DIV = ".ic-notification--success:contains('with the following user role: " + policy_role + "')";
	h_element_rendered_nolog(INVITATION_ROLE_DIV,
		function(el)
		{
			$(INVITATION_ROLE_DIV + " .ic-notification__content").append( message_policy(policy_role) );
		}
	);
}


// course invitation for Teacher
//
function course_invitation_add_policy_teacher ()
{
	courserole = 'Teacher';
	course_invitation_add_policy(courserole);
}


// course invitation for TA
//
function course_invitation_add_policy_ta ()
{
	courserole = 'TA';
	course_invitation_add_policy(courserole);
}


// course invitation for Grader
//
function course_invitation_add_policy_grader ()
{
	courserole = 'Grader';
	course_invitation_add_policy(courserole);
}


// course invitation for Designer
//
function course_invitation_add_policy_designer ()
{
	courserole = 'Designer';
	course_invitation_add_policy(courserole);
}


// course invitation: call the functions with specific user roles
//
course_invitation_add_policy_teacher ();
course_invitation_add_policy_ta ();
course_invitation_add_policy_grader ();
course_invitation_add_policy_designer ();







// popup with policy message box shown in course Homepage
//

h_page (/\/courses\/\d+$/, policy_popup_teacher);
h_page (/\/courses\/\d+$/, policy_popup_ta);
h_page (/\/courses\/\d+$/, policy_popup_grader);
h_page (/\/courses\/\d+$/, policy_popup_designer);

// policy dialog: append the policy message box for the role variable
//
function policy_dialog (var_div, var_role)
{
	const INVITATION_DIV = var_div;
	h_element_rendered_nolog(INVITATION_DIV,
		function(el)
		{
			const JQ_INVITATION_A_LINK = "a[href*='?invitation=']";
			var invitation_a_link_href;
			invitation_a_link_href = $( JQ_INVITATION_A_LINK )[0].href;
			const COURSE_A_LINK = invitation_a_link_href.split('?invitation=')
			course_a_link_href = COURSE_A_LINK[0];
			var t_popup_div = '<div id="policy_dialog" title="Policies on Use of IT Services and Resources" style="width: 500px;">' + message_policy(var_role)  + '<br><div class="Button Button--small Button--success" style="padding: 10px;"><a data-method="POST" data-url="' + course_a_link_href + '/enrollment_invitation?accept=true" href="#" style="text-decoration: none;"><span style="color: #FFFFFF; font-size: 1rem;">Agree and accept the course invitation</span></a></div>' + '<br><br></div>';
			$('<script>$( function() { $( "#policy_dialog" ).dialog({height: "auto",width: 500}); } );</' + 'script>').appendTo (document.body);
			$( t_popup_div ).appendTo (document.body);
		}
	);
}

// policy popup for Teacher
//
function policy_popup_teacher ()
{
	courserole = 'Teacher';
	policy_dialog (".ic-notification--success:contains(': " + courserole + "')", courserole);
}

// policy popup for TA
//
function policy_popup_ta ()
{
	courserole = 'TA';
	policy_dialog (".ic-notification--success:contains(': " + courserole + "')", courserole);
}

// policy popup for Grader
//
function policy_popup_grader ()
{
	courserole = 'Grader';
	policy_dialog (".ic-notification--success:contains(': " + courserole + "')", courserole);
}

// policy popup for Designer
//
function policy_popup_designer ()
{
	courserole = 'Designer';
	policy_dialog (".ic-notification--success:contains(': " + courserole + "')", courserole);
}

 /*
 (end) policy message on course invitation for Teacher / TA / Grader / Designer roles
 */




/*
 policy message on course invitation (especially for student enrollments) for non-English interface
 */

msg_en = "with the following user role:";
st_en_other = ": Student"; // Deutsch | Italiano - Studente | Norsk (Bokmål) | Norsk (Nynorsk) | Svenska
st_ca = ": Estudiant"; // Català
st_cy = ": Myfyriwr"; // Cymraeg
st_da = ": Studerende"; // Dansk
st_x_k12 = ": Elev"; // Dansk GR/GY | Norsk (Bokmål) GS/VGS | Svenska GR/GY
st_es = ": Estudiante"; // Español
st_fr = ": Étudiant"; // Français | Français (Canada)
st_is = ": Nemandi"; // Íslenska
st_ht = ": Elèv"; // Kreyòl Ayisyen
st_hu = ": Hallgató"; // Magyar
st_nl = ": Cursist"; // Nederlands
st_pl = ": Uczestnik"; // Polski
st_pt = ": Aluno"; // Português | Português do Brasil
st_ru = ": Студент"; // pу́сский | український
st_mi = ": Ākonga"; // Reo Māori (Aotearoa)
st_sl = ": Študent"; // Slovenščina
st_fi = ": Opiskelija"; // Suomi
st_tr = ": Öğrenci"; // Türkçe
st_el = ": Μαθητής"; // Ελληνικά
st_hy = ": Ունկնդիր"; // Հայերեն
//st_he = ""; // עברית
//st_ar = ""; // العربية
//st_fa = ""; // فارسی
st_ko = ": 학생"; // 한국말 (not work because of msg_en = "with the following user role:" included)
st_ja = "。受講生"; // 日本語
st_zhHans = "：学生"; // 简体中文
st_zhHant = "：學生"; // 繁體中文

// advanced course user roles - 한국말
tr_ko = ": 교사";
ta_ko = ": 조교";
ds_ko = ": 과목 디자이너";


const INVITATION_OTHERLANG_DIV = ".ic-notification--success:not(:contains('" + msg_en + "')):not(:contains('" + st_en_other + "')):not(:contains('" + st_ca + "')):not(:contains('" + st_cy + "')):not(:contains('" + st_da + "')):not(:contains('" + st_x_k12 + "')):not(:contains('" + st_es + "')):not(:contains('" + st_fr + "')):not(:contains('" + st_is + "')):not(:contains('" + st_ht + "')):not(:contains('" + st_hu + "')):not(:contains('" + st_nl + "')):not(:contains('" + st_pl + "')):not(:contains('" + st_pt + "')):not(:contains('" + st_ru + "')):not(:contains('" + st_mi + "')):not(:contains('" + st_sl + "')):not(:contains('" + st_fi + "')):not(:contains('" + st_tr + "')):not(:contains('" + st_el + "')):not(:contains('" + st_hy + "')):not(:contains('" + st_ja + "')):not(:contains('" + st_zhHans + "')):not(:contains('" + st_zhHant + "'))";


// course invitation
//
h_element_rendered_nolog(INVITATION_OTHERLANG_DIV,
	function(el)
	{
		$(INVITATION_OTHERLANG_DIV + " .ic-notification__content").append( message_policy('') );
	}
);
h_element_rendered_nolog(".ic-notification--success:contains('" + tr_ko + "')", function(el) { $(".ic-notification--success:contains('" + tr_ko + "')" + " .ic-notification__content").append( message_policy('') ); } );
h_element_rendered_nolog(".ic-notification--success:contains('" + ta_ko + "')", function(el) { $(".ic-notification--success:contains('" + ta_ko + "')" + " .ic-notification__content").append( message_policy('') ); } );
h_element_rendered_nolog(".ic-notification--success:contains('" + ds_ko + "')", function(el) { $(".ic-notification--success:contains('" + ds_ko + "')" + " .ic-notification__content").append( message_policy('') ); } );




// popup with policy message box shown in course Homepage
//

h_page (/\/courses\/\d+$/, policy_popup_otherlang);
h_page (/\/courses\/\d+$/, policy_popup_otherlang_tr_ko);
h_page (/\/courses\/\d+$/, policy_popup_otherlang_ta_ko);
h_page (/\/courses\/\d+$/, policy_popup_otherlang_ds_ko);

// policy popup for other language
//
function policy_popup_otherlang ()
{
	courserole = '';
	policy_dialog (INVITATION_OTHERLANG_DIV, courserole);
}

// policy popup for Teacher (Korean)
//
function policy_popup_otherlang_tr_ko ()
{
	courserole = '';
	policy_dialog (".ic-notification--success:contains('" + tr_ko + "')", courserole);
}

// policy popup for TA (Korean)
//
function policy_popup_otherlang_ta_ko ()
{
	courserole = '';
	policy_dialog (".ic-notification--success:contains('" + ta_ko + "')", courserole);
}

// policy popup for Designer (Korean)
//
function policy_popup_otherlang_ds_ko ()
{
	courserole = '';
	policy_dialog (".ic-notification--success:contains('" + ds_ko + "')", courserole);
}

/*
 (end) policy message on course invitation (especially for student enrollments) for non-English interface
 */




/*
 Gradebook important note
 */

h_page (/\/courses\/\d+\/gradebook$/, gradebook_toolbar_mod);

function gradebook_toolbar_mod ()
{
	gradebook_toolbar_message ();
}

 /* add message */
function gradebook_toolbar_message ()
{
	const GRADE_TOOLBAR_DIV = ".assignment-gradebook-container .accessibility_warning";

	h_element_rendered (GRADE_TOOLBAR_DIV,
						function (el)
						{
							$ (GRADE_TOOLBAR_DIV).append (
								'<br><div id="canvas-grades-univdata-note" class="msg-grades-note msg-grades-note--admin-created msg-grades-note--alert"><div class="msg-grades-note__icon" role="presentation"><i class="icon-warning"></i><span class="screenreader-only">important note</span></div><div><div class="msg-grades-note__content"><div class="msg-grades-note__message"><span class="notification_message"><p>Please be reminded about the importance of maintaining the confidentiality of University data (in paper or electronic form). The gradebook data should be used only for teaching related purposes and should not be kept longer than is necessary. Reasonable precautions should also be taken to protect the information against unauthorized access, disclosure or transmission, or misuse.</p></span></div><div class="msg-grades-note__actions"><a href="#" class="Button Button--icon-action" onclick="closePolicyMsg()"  title="close" role="button"><i class="icon-x"></i><span class="screenreader-only">close</span></a></div><script>function closePolicyMsg() { $("#canvas-grades-univdata-note").hide(); }</script></div></div></div>');
						}
	);
}




/* (HTML code)

<br><div id="canvas-grades-univdata-note" class="msg-grades-note msg-grades-note--admin-created msg-grades-note--alert"><div class="msg-grades-note__icon" role="presentation"><i class="icon-warning"></i><span class="screenreader-only">important note</span></div><div><div class="msg-grades-note__content"><div class="msg-grades-note__message"><span class="notification_message"><p>Please be reminded about the importance of maintaining the confidentiality of University data (in paper or electronic form). The gradebook data should be used only for teaching related purposes and should not be kept longer than is necessary. Reasonable precautions should also be taken to protect the information against unauthorized access, disclosure or transmission, or misuse.</p></span></div><div class="msg-grades-note__actions"><a href="#" class="Button Button--icon-action" onclick="closePolicyMsg()"  title="close" role="button"><i class="icon-x"></i><span class="screenreader-only">close</span></a></div><script>function closePolicyMsg() { $("#canvas-grades-univdata-note").hide(); }</script></div></div></div>

<br>
<div id="canvas-grades-univdata-note" class="msg-grades-note msg-grades-note--admin-created msg-grades-note--alert">
	<div class="msg-grades-note__icon" role="presentation">
		<i class="icon-warning"></i><span class="screenreader-only">important note</span>
	</div>
	<div>
		<div class="msg-grades-note__content">
			<div class="msg-grades-note__message">
				<span class="notification_message"><p>Please be reminded about the importance of maintaining the confidentiality of University data (in paper or electronic form). The gradebook data should be used only for teaching related purposes and should not be kept longer than is necessary. Reasonable precautions should also be taken to protect the information against unauthorized access, disclosure or transmission, or misuse.</p></span>
			</div>
			<div class="msg-grades-note__actions">
				<a href="#" class="Button Button--icon-action" onclick="closePolicyMsg()" title="close" role="button"><i class="icon-x"></i><span class="screenreader-only">close</span></a>
			</div>
			<script>function closePolicyMsg() {
				$("#canvas-grades-univdata-note").hide();
			}
			</script>
		</div>
	</div>
</div>
*/


/*
 (end) Gradebook important note
 */
































/* ======================================================================= */
/* ======================================================================= */
/* ========================= archived codes ============================== */
/* ======================================================================= */
/* ======================================================================= */





/*
Blackboard Ally
===================== not used =====================
window.ALLY_CFG = {
    'baseUrl': 'https://prod-ap-southeast-1.ally.ac',
    'clientId': 2
};
$.getScript(ALLY_CFG.baseUrl + '/integration/canvas/ally.js');
*/








/* ============================ Assignments ============================== */

/* (not used) Hide moderated grading for external tool
function assignment_new_hide_external_moderated ()
{
	console_log ("assignment_new_hide_external_moderated");

	const ASSIGNMENT_NEW_SUBMISSION_TYPE_SELECT = "#assignment_submission_type";
	const ASSIGNMENT_NEW_MODERATED_CHECKBOX = "#assignment_moderated_grading";

	h_element_rendered (ASSIGNMENT_NEW_SUBMISSION_TYPE_SELECT,
	                    function (el)
	                    {
		                    $ (ASSIGNMENT_NEW_SUBMISSION_TYPE_SELECT).change (
			                    function ()
			                    {
				                    var t_moderated_fieldset = $ (
					                    ASSIGNMENT_NEW_MODERATED_CHECKBOX).parent ().parent ().parent ();

				                    if (t_moderated_fieldset.is ('fieldset'))
				                    {
					                    if ($ (ASSIGNMENT_NEW_SUBMISSION_TYPE_SELECT).val () ==
					                        'external_tool')
					                    {
						                    $ (ASSIGNMENT_NEW_MODERATED_CHECKBOX).attr (
							                    'checked',
							                    false);
						                    t_moderated_fieldset.hide ();
					                    }
					                    else
					                    {
						                    t_moderated_fieldset.show ();
					                    }
				                    }
			                    }
		                    );

		                    // execute one time to prevent external tool being selected at the first place
		                    $ (ASSIGNMENT_NEW_SUBMISSION_TYPE_SELECT).change ();
	                    }
	);
} */


/* (not used) Hide moderated grading for external tool
function assignment_edit_hide_external_moderated ()
{
	console_log ("assignment_edit_hide_external_moderated");

	const ASSIGNMENT_EDIT_SUBMISSION_TYPE_SELECT = "#assignment_submission_type";
	const ASSIGNMENT_EDIT_MODERATED_CHECKBOX = "#assignment_moderated_grading";

	h_element_rendered (ASSIGNMENT_EDIT_SUBMISSION_TYPE_SELECT,
	                    function (el)
	                    {
		                    $ (ASSIGNMENT_EDIT_SUBMISSION_TYPE_SELECT).change (
			                    function ()
			                    {
				                    // do only if moderated checkbox is not selected
				                    if ($ (ASSIGNMENT_EDIT_MODERATED_CHECKBOX).is (":checked") == false)
				                    {
					                    var t_moderated_fieldset = $ (
						                    ASSIGNMENT_EDIT_MODERATED_CHECKBOX).parent ().parent ().parent ();

					                    if (t_moderated_fieldset.is ('fieldset'))
					                    {
						                    if ($ (ASSIGNMENT_EDIT_SUBMISSION_TYPE_SELECT).val () ==
						                        'external_tool')
						                    {
							                    $ (ASSIGNMENT_EDIT_MODERATED_CHECKBOX).attr (
								                    'checked',
								                    false);
							                    t_moderated_fieldset.hide ();
						                    }
						                    else
						                    {
							                    t_moderated_fieldset.show ();
						                    }
					                    }
				                    }
			                    }
		                    );

		                    // execute one time to prevent external tool being selected at the first place
		                    $ (ASSIGNMENT_EDIT_SUBMISSION_TYPE_SELECT).change ();
	                    }
	);
} */








/* ============================ New Quizzes ============================== */

/* (not used) Rename save New Quizzes label
function new_quizzes_edit_rename_button ()
{
	console_log ("new_quizzes_edit_rename_button");

	const NEWQUIZZES_CREATE_SAVE_BUTTON = "button:contains('Save')[type='submit']";
	const NEWQUIZZES_EXTERNAL_LINK_URL = "#assignment_external_tool_tag_attributes_url"

	h_element_rendered (NEWQUIZZES_CREATE_SAVE_BUTTON,
	                    function (el)
	                    {
		                    if ($(NEWQUIZZES_EXTERNAL_LINK_URL).val().indexOf('quiz-lti-sin') >= 0)
							{
								$ (NEWQUIZZES_CREATE_SAVE_BUTTON).attr ("data-text-while-loading",
		                                                             "Save & Next...");
		                    	$ (NEWQUIZZES_CREATE_SAVE_BUTTON).html ("Save & Next");
							}
	                    }
	)
}
 */








/* ============================= Gradebook =============================== */

/*
 gradebook mods
 */
// this is not used as it is unstable when the student list is very long
// h_page (/\/courses\/\d+\/gradebook$/, gradebook_rename_secondary_id);

/*
 rename secondary id as cityu eid

function gradebook_rename_secondary_id ()
{
	console_log ("gradebook_rename_secondary_id");

	const GRADEBOOK_FILTER_INPUT = "#gradebook-filter-input";
	const GRADEBOOK_GRID_SECONDARY_ID_SPAN = "span:contains('Secondary ID')";

	h_element_rendered (GRADEBOOK_FILTER_INPUT,
	                    function (el)
	                    {
		                    $ (GRADEBOOK_FILTER_INPUT).attr ('placeholder',
		                                                     'Filter by student name or CityU EID');
		                    $ (GRADEBOOK_GRID_SECONDARY_ID_SPAN) [0].textContent = 'CityU EID';
	                    }
	)
}
 */